/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'N551' at '04.09.15 21:03' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.springframework:spring-webmvc:4.2.1.RELEASE'
    compile 'org.springframework:spring-jdbc:4.2.1.RELEASE'
    compile 'javax.servlet:servlet-api:3.0-alpha-1'
    compile 'org.postgresql:postgresql:9.4-1203-jdbc42'
    compile 'org.apache.tomcat:tomcat-dbcp:8.0.26'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'org.apache.commons:commons-lang3:3.2.1'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

buildscript {
  repositories {
    jcenter()
  }
  
  dependencies {
    classpath 'org.akhikhl.gretty:gretty:1.2.4'
  }
}

repositories {
  jcenter()
}

if (!project.plugins.findPlugin(org.akhikhl.gretty.GrettyPlugin))
  project.apply(plugin: org.akhikhl.gretty.GrettyPlugin)
